# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/04_auth.ipynb (unless otherwise specified).

__all__ = ['Tokens', 'go_strava_auth']

# Cell

import json
import os

import stravalib
import webbrowser
from fastcore.all import *
from .imports import *
client_id, secret = os.getenv("client_id"), os.getenv("secret")

# Cell
class Tokens:
    """A messenger between to procces to comunicate an id which has been handled."""
    def __init__(self, f="tokens.json"):
        try:
            f = find_dotenv(f, raise_error_if_not_found=True)
        except:
            f = "tokens.json"
        self.f = f
        self.reset()

    def add(self, id):
        with open(self.f,'a') as f:
            f.write(f'{str(id)},0\n')

    def is_new(self):
        with open(self.f,'r') as f:
            for i,l in enumerate(f):
                if l.split(',')[1]=='0\n':
                    return l.split(',')[0]
        if i > 10:
            self.reset(hard = True)
        return False

    def reset(self, hard = False):
        if hard or not os.path.isfile(self.f):
            with open(self.f,'w') as f:
                f.write('id,new\n')
        self.is_new()

    def done(self, id):
        with open(self.f,'r') as f:
            content = f.read()
        new_content = content.replace(f'{str(id)},0\n',f'{str(id)},1\n')
        with open(self.f,'w') as f:
            f.write(new_content)
#         self.f.close()

# Cell
def go_strava_auth(client:stravalib.client.Client):
    """Excecuted by the front-end to start an auth request."""
    host = os.getenv("host")
    url = 'http://' +host+ ':5555/authorized'
    authorize_url = client.authorization_url(
        client_id=client_id, redirect_uri=url, scope="activity:read_all"
    )
    webbrowser.open(authorize_url)